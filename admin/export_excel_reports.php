<?php
session_start();
require_once '../config/database.php';
require_once '../includes/functions.php';

// Include PhpSpreadsheet library
require_once '../vendor/autoload.php';

use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
use PhpOffice\PhpSpreadsheet\Style\Border;
use PhpOffice\PhpSpreadsheet\Style\Fill;
use PhpOffice\PhpSpreadsheet\Style\Font;
use PhpOffice\PhpSpreadsheet\Style\Color;

check_admin();

// Get parameters
$type = isset($_GET['type']) ? $_GET['type'] : '';
$semester = isset($_GET['semester']) ? (int)$_GET['semester'] : 0;
$year = isset($_GET['year']) ? $_GET['year'] : date('Y');

// Create new Spreadsheet object
$spreadsheet = new Spreadsheet();
$sheet = $spreadsheet->getActiveSheet();

// Function to apply header styling
function applyHeaderStyle($sheet, $row, $colCount) {
    $sheet->getStyle("A{$row}:{$sheet->getHighestColumn()}{$row}")->applyFromArray([
        'font' => [
            'bold' => true,
            'color' => ['rgb' => 'FFFFFF'],
        ],
        'fill' => [
            'fillType' => Fill::FILL_SOLID,
            'startColor' => ['rgb' => '4472C4'],
        ],
        'alignment' => [
            'horizontal' => Alignment::HORIZONTAL_CENTER,
            'vertical' => Alignment::VERTICAL_CENTER,
        ],
    ]);
}

// Function to apply data styling
function applyDataStyle($sheet, $startRow, $endRow, $colCount) {
    $sheet->getStyle("A{$startRow}:{$sheet->getHighestColumn()}{$endRow}")->applyFromArray([
        'alignment' => [
            'vertical' => Alignment::VERTICAL_CENTER,
        ],
    ]);

    // Alternate row colors
    for ($row = $startRow; $row <= $endRow; $row++) {
        if ($row % 2 == 0) {
            $sheet->getStyle("A{$row}:{$sheet->getHighestColumn()}{$row}")->getFill()
                ->setFillType(Fill::FILL_SOLID)
                ->setStartColor(new Color('F2F2F2'));
        }
    }
}

// Get semester date range if specified
$semester_start_date = null;
$semester_end_date = null;
$semester_name = 'All Time';
$academic_year = '';
if ($semester > 0) {
    $semester_dates_query = "SELECT start_date, end_date, name, academic_year FROM semesters WHERE id = ?";
    $stmt = mysqli_prepare($conn, $semester_dates_query);
    mysqli_stmt_bind_param($stmt, "i", $semester);
    mysqli_stmt_execute($stmt);
    $semester_dates_result = mysqli_stmt_get_result($stmt);
    if ($semester_row = mysqli_fetch_assoc($semester_dates_result)) {
        $semester_start_date = $semester_row['start_date'];
        $semester_end_date = $semester_row['end_date'];
        $semester_name = $semester_row['name'];
        $academic_year = $semester_row['academic_year'];
    }
}

$currentRow = 1;

// Title
$sheet->setCellValue("A{$currentRow}", ucfirst($type) . ' Report - ' . ($semester > 0 ? $semester_name . ' (' . $academic_year . ')' : 'All Time'));
$sheet->mergeCells("A{$currentRow}:H{$currentRow}");
$sheet->getStyle("A{$currentRow}")->getFont()->setBold(true)->setSize(16);
$sheet->getStyle("A{$currentRow}")->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
$currentRow++;

// Report details
$sheet->setCellValue("A{$currentRow}", 'Generated:');
$sheet->setCellValue("B{$currentRow}", date('Y-m-d H:i:s'));
$sheet->setCellValue("C{$currentRow}", 'Generated By:');
$sheet->setCellValue("D{$currentRow}", $_SESSION['username'] ?? 'System');
$currentRow++;

$sheet->setCellValue("A{$currentRow}", '');
$currentRow++;

switch ($type) {
    case 'users':
        exportUsersReport($conn, $sheet, $semester_start_date, $semester_end_date, $currentRow);
        break;
    case 'posts':
        exportPostsReport($conn, $sheet, $semester_start_date, $semester_end_date, $currentRow);
        break;
    case 'inquiries':
        exportInquiriesReport($conn, $sheet, $semester_start_date, $semester_end_date, $currentRow);
        break;
    case 'students':
        exportStudentsReport($conn, $sheet, $semester_start_date, $semester_end_date, $currentRow);
        break;
    case 'evaluations':
        exportEvaluationsReport($conn, $sheet, $semester_start_date, $semester_end_date, $currentRow);
        break;
    default:
        $sheet->setCellValue("A{$currentRow}", 'Invalid report type');
}

// Auto-size columns
foreach (range('A', $sheet->getHighestColumn()) as $col) {
    $sheet->getColumnDimension($col)->setAutoSize(true);
}

// Set page setup for Legal size paper (8.5" x 13")
$sheet->getPageSetup()->setPaperSize(\PhpOffice\PhpSpreadsheet\Worksheet\PageSetup::PAPERSIZE_LEGAL);
$sheet->getPageSetup()->setOrientation(\PhpOffice\PhpSpreadsheet\Worksheet\PageSetup::ORIENTATION_PORTRAIT);
$sheet->getPageSetup()->setFitToWidth(1);
$sheet->getPageSetup()->setFitToHeight(0); // Auto-fit height
$sheet->getPageSetup()->setHorizontalCentered(true);
$sheet->getPageSetup()->setVerticalCentered(false);

// Set margins (in inches)
$sheet->getPageMargins()->setTop(0.75);
$sheet->getPageMargins()->setRight(0.75);
$sheet->getPageMargins()->setBottom(0.75);
$sheet->getPageMargins()->setLeft(0.75);
$sheet->getPageMargins()->setHeader(0.5);
$sheet->getPageMargins()->setFooter(0.5);

// Set headers for Excel download
$filename = $type . '_report_' . date('Y-m-d') . '.xlsx';
header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
header('Content-Disposition: attachment; filename="' . $filename . '"');
header('Cache-Control: max-age=0');

// Create Excel writer and output
$writer = new Xlsx($spreadsheet);
$writer->save('php://output');
exit;

function exportUsersReport($conn, $sheet, $start_date, $end_date, &$currentRow) {
    // Headers
    $headers = ['ID', 'Username', 'First Name', 'Last Name', 'Email', 'Role', 'Status', 'Created At'];
    $col = 'A';
    foreach ($headers as $header) {
        $sheet->setCellValue("{$col}{$currentRow}", $header);
        $col++;
    }
    applyHeaderStyle($sheet, $currentRow, count($headers));
    $currentRow++;

    // Get users data
    $users_where = "";
    $users_params = [];
    if ($start_date && $end_date) {
        $users_where = "WHERE created_at BETWEEN ? AND ?";
        $users_params = [$start_date, $end_date];
    }

    $users_query = "SELECT id, username, first_name, last_name, email, role, status, created_at FROM users $users_where ORDER BY created_at DESC";

    if (!empty($users_params)) {
        $stmt = mysqli_prepare($conn, $users_query);
        mysqli_stmt_bind_param($stmt, "ss", $users_params[0], $users_params[1]);
        mysqli_stmt_execute($stmt);
        $users_result = mysqli_stmt_get_result($stmt);
    } else {
        $users_result = mysqli_query($conn, $users_query);
    }

    $startDataRow = $currentRow;

    while ($user = mysqli_fetch_assoc($users_result)) {
        $sheet->setCellValue("A{$currentRow}", $user['id']);
        $sheet->setCellValue("B{$currentRow}", $user['username']);
        $sheet->setCellValue("C{$currentRow}", $user['first_name']);
        $sheet->setCellValue("D{$currentRow}", $user['last_name']);
        $sheet->setCellValue("E{$currentRow}", $user['email']);
        $sheet->setCellValue("F{$currentRow}", $user['role']);
        $sheet->setCellValue("G{$currentRow}", $user['status']);
        $sheet->setCellValue("H{$currentRow}", $user['created_at']);
        $currentRow++;
    }

    applyDataStyle($sheet, $startDataRow, $currentRow - 1, count($headers));
}

function exportPostsReport($conn, $sheet, $start_date, $end_date, &$currentRow) {
    // Headers
    $headers = ['ID', 'Title', 'Type', 'Status', 'Author', 'Created At', 'Updated At'];
    $col = 'A';
    foreach ($headers as $header) {
        $sheet->setCellValue("{$col}{$currentRow}", $header);
        $col++;
    }
    applyHeaderStyle($sheet, $currentRow, count($headers));
    $currentRow++;

    // Get posts data
    $posts_where = "";
    $posts_params = [];
    if ($start_date && $end_date) {
        $posts_where = "WHERE p.created_at BETWEEN ? AND ?";
        $posts_params = [$start_date, $end_date];
    }

    $posts_query = "SELECT p.id, p.title, p.type, p.status, p.created_at, p.updated_at,
                           CONCAT(u.first_name, ' ', u.last_name) as author
                    FROM posts p
                    LEFT JOIN users u ON p.author_id = u.id
                    $posts_where
                    ORDER BY p.created_at DESC";

    if (!empty($posts_params)) {
        $stmt = mysqli_prepare($conn, $posts_query);
        mysqli_stmt_bind_param($stmt, "ss", $posts_params[0], $posts_params[1]);
        mysqli_stmt_execute($stmt);
        $posts_result = mysqli_stmt_get_result($stmt);
    } else {
        $posts_result = mysqli_query($conn, $posts_query);
    }

    $startDataRow = $currentRow;

    while ($post = mysqli_fetch_assoc($posts_result)) {
        $sheet->setCellValue("A{$currentRow}", $post['id']);
        $sheet->setCellValue("B{$currentRow}", $post['title']);
        $sheet->setCellValue("C{$currentRow}", $post['type']);
        $sheet->setCellValue("D{$currentRow}", $post['status']);
        $sheet->setCellValue("E{$currentRow}", $post['author']);
        $sheet->setCellValue("F{$currentRow}", $post['created_at']);
        $sheet->setCellValue("G{$currentRow}", $post['updated_at']);
        $currentRow++;
    }

    applyDataStyle($sheet, $startDataRow, $currentRow - 1, count($headers));
}

function exportInquiriesReport($conn, $sheet, $start_date, $end_date, &$currentRow) {
    // Headers
    $headers = ['ID', 'Name', 'Email', 'Subject', 'Message', 'Status', 'Created At', 'Resolved At'];
    $col = 'A';
    foreach ($headers as $header) {
        $sheet->setCellValue("{$col}{$currentRow}", $header);
        $col++;
    }
    applyHeaderStyle($sheet, $currentRow, count($headers));
    $currentRow++;

    // Get inquiries data
    $inquiries_where = "";
    $inquiries_params = [];
    if ($start_date && $end_date) {
        $inquiries_where = "WHERE created_at BETWEEN ? AND ?";
        $inquiries_params = [$start_date, $end_date];
    }

    $inquiries_query = "SELECT id, name, email, subject, message, is_resolved, created_at, resolved_at FROM user_inquiries $inquiries_where ORDER BY created_at DESC";

    if (!empty($inquiries_params)) {
        $stmt = mysqli_prepare($conn, $inquiries_query);
        mysqli_stmt_bind_param($stmt, "ss", $inquiries_params[0], $inquiries_params[1]);
        mysqli_stmt_execute($stmt);
        $inquiries_result = mysqli_stmt_get_result($stmt);
    } else {
        $inquiries_result = mysqli_query($conn, $inquiries_query);
    }

    $startDataRow = $currentRow;

    while ($inquiry = mysqli_fetch_assoc($inquiries_result)) {
        $sheet->setCellValue("A{$currentRow}", $inquiry['id']);
        $sheet->setCellValue("B{$currentRow}", $inquiry['name']);
        $sheet->setCellValue("C{$currentRow}", $inquiry['email']);
        $sheet->setCellValue("D{$currentRow}", $inquiry['subject']);
        $sheet->setCellValue("E{$currentRow}", $inquiry['message']);
        $sheet->setCellValue("F{$currentRow}", $inquiry['is_resolved'] ? 'Resolved' : 'Unresolved');
        $sheet->setCellValue("G{$currentRow}", $inquiry['created_at']);
        $sheet->setCellValue("H{$currentRow}", $inquiry['resolved_at']);
        $currentRow++;
    }

    applyDataStyle($sheet, $startDataRow, $currentRow - 1, count($headers));
}

function exportStudentsReport($conn, $sheet, $start_date, $end_date, &$currentRow) {
    // Headers
    $headers = ['ID', 'Student ID', 'First Name', 'Last Name', 'Email', 'Status', 'Created At'];
    $col = 'A';
    foreach ($headers as $header) {
        $sheet->setCellValue("{$col}{$currentRow}", $header);
        $col++;
    }
    applyHeaderStyle($sheet, $currentRow, count($headers));
    $currentRow++;

    // Get students data
    $students_where = "WHERE status = 'active'";
    $students_params = [];
    if ($start_date && $end_date) {
        $students_where .= " AND created_at BETWEEN ? AND ?";
        $students_params = [$start_date, $end_date];
    }

    $students_query = "SELECT id, student_id, first_name, last_name, email, status, created_at FROM students $students_where ORDER BY created_at DESC";

    if (!empty($students_params)) {
        $stmt = mysqli_prepare($conn, $students_query);
        mysqli_stmt_bind_param($stmt, "ss", $students_params[0], $students_params[1]);
        mysqli_stmt_execute($stmt);
        $students_result = mysqli_stmt_get_result($stmt);
    } else {
        $students_result = mysqli_query($conn, $students_query);
    }

    $startDataRow = $currentRow;

    while ($student = mysqli_fetch_assoc($students_result)) {
        $sheet->setCellValue("A{$currentRow}", $student['id']);
        $sheet->setCellValue("B{$currentRow}", $student['student_id']);
        $sheet->setCellValue("C{$currentRow}", $student['first_name']);
        $sheet->setCellValue("D{$currentRow}", $student['last_name']);
        $sheet->setCellValue("E{$currentRow}", $student['email']);
        $sheet->setCellValue("F{$currentRow}", $student['status']);
        $sheet->setCellValue("G{$currentRow}", $student['created_at']);
        $currentRow++;
    }

    applyDataStyle($sheet, $startDataRow, $currentRow - 1, count($headers));
}

function exportEvaluationsReport($conn, $sheet, $start_date, $end_date, &$currentRow) {
    // Check if evaluation_sessions table exists
    $table_check = mysqli_query($conn, "SHOW TABLES LIKE 'evaluation_sessions'");
    if (mysqli_num_rows($table_check) > 0) {
        // Headers
        $headers = ['ID', 'Evaluator Type', 'Evaluator ID', 'Evaluatee ID', 'Subject ID', 'Semester', 'Created At'];
        $col = 'A';
        foreach ($headers as $header) {
            $sheet->setCellValue("{$col}{$currentRow}", $header);
            $col++;
        }
        applyHeaderStyle($sheet, $currentRow, count($headers));
        $currentRow++;

        // Get evaluations data
        $evaluations_where = "WHERE es.status != 'draft'";
        $evaluations_params = [];
        if ($start_date && $end_date) {
            $evaluations_where .= " AND es.created_at BETWEEN ? AND ?";
            $evaluations_params = [$start_date, $end_date];
        }

        $evaluations_query = "SELECT es.id, es.evaluator_type, es.evaluator_id, es.evaluatee_id, es.subject_id,
                                    s.name as semester_name, es.created_at
                             FROM evaluation_sessions es
                             LEFT JOIN semesters s ON es.semester_id = s.id
                             $evaluations_where
                             ORDER BY es.created_at DESC";

        if (!empty($evaluations_params)) {
            $stmt = mysqli_prepare($conn, $evaluations_query);
            mysqli_stmt_bind_param($stmt, "ss", $evaluations_params[0], $evaluations_params[1]);
            mysqli_stmt_execute($stmt);
            $evaluations_result = mysqli_stmt_get_result($stmt);
        } else {
            $evaluations_result = mysqli_query($conn, $evaluations_query);
        }

        $startDataRow = $currentRow;

        while ($evaluation = mysqli_fetch_assoc($evaluations_result)) {
            $sheet->setCellValue("A{$currentRow}", $evaluation['id']);
            $sheet->setCellValue("B{$currentRow}", $evaluation['evaluator_type']);
            $sheet->setCellValue("C{$currentRow}", $evaluation['evaluator_id']);
            $sheet->setCellValue("D{$currentRow}", $evaluation['evaluatee_id']);
            $sheet->setCellValue("E{$currentRow}", $evaluation['subject_id']);
            $sheet->setCellValue("F{$currentRow}", $evaluation['semester_name']);
            $sheet->setCellValue("G{$currentRow}", $evaluation['created_at']);
            $currentRow++;
        }

        applyDataStyle($sheet, $startDataRow, $currentRow - 1, count($headers));
    } else {
        $sheet->setCellValue("A{$currentRow}", 'No evaluation data available');
    }
}
?>